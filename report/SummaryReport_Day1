---
title: "10X Genomics Summary Data"
author: "Swapna Menon, HackSeq 2017"
date: "10/22/2017"
output:
  flexdashboard::flex_dashboard:
  theme: bootstrap
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r prelims}
#1. Read in data

#filename <- "summary2g.csv"
#g2 <- read.csv(filename)

library(here)
filename <- "hg002g1_lrwgsvc/outs/summary.csv"
g2 <- read.csv(here(filename))

#2. Function to format numbers
digi <- function(num){
  format(num, digits = 2, big.mark=",")
}
#3. loading library to make flexdashboard document
library(flexdashboard)
```
<!--The goal was to display the quants and statistics from Long Ranger Summary file in a user-friendly manner.
Metrics were classified into relevant category pertaining to molecule or alignment.
All numbers were formatted so that
-Large numbers had comma separators (digi function)
-Decimals did not exceed two significant digits (digi function)
-Fractions were converted to percentages
-Large values in bases or base pairs were converted to kb or kbp
Plots don't make sense for these values; can think of value boxes 
or guages for important percentage values-->

SUMMARY
===================================== 

Sidebar {.sidebar}
-------------------------------------

File: `r filename` 

***

Chromium `r g2$instrument_ids`

***

Long Ranger v. `r g2$longranger_version`

Column {data-width=7000}
-------------------------------------

**GEMs**  

*Number of GEMs* \ \t \ \t\ \t \ \t     `r digi(g2$gems_detected)`  


*Mean DNA per GEM* \ \t \ \t\ \t \ \t  `r digi(g2$mean_dna_per_gem)` read pairs

**INPUT DNA**

*DNA per well* \ \t \ \t\ \t \ \t `r digi(g2$corrected_loaded_mass_ng)` ng  

*Mean length +/- s.d.* \ \t \ \t\ \t \ \t  `r digi(g2$molecule_length_mean/1000)` kbp +/- `r digi(g2$molecule_length_stddev/1000)` kbp

**BARCODE (BC)** 

*Reads with valid BC* \ \t \ \t\ \t \ \t `r digi(g2$bc_on_whitelist*100)` %

*Mean base quality score, BC bases*  \ \t \ \t\ \t \ \t`r digi(g2$bc_mean_qscore)`

*N50, read-pairs per input DNA molecule* \ \t \ \t\ \t \ \t `r g2$n50_linked_reads_per_molecule`


Column {data-width=7000}
-------------------------------------

**STRUCTURAL VARIANT CALLS**

*Large SVs* \ \t \ \t\ \t \ \t `r digi(g2$large_sv_calls)`  

*Deletions* \ \t \ \t\ \t \ \t `r digi(g2$short_deletion_calls)`

**PHASING** 

*Phased SNPs* \ \t \ \t\ \t \ \t `r digi(g2$snps_phased*100)` %

*Genes phased in single phase block* \ \t \ \t\ \t \ \t `r digi(g2$genes_phased_lt_100kb*100)` %

*Longest phase block* \ \t \ \t\ \t \ \t `r digi(g2$longest_phase_block/1000)` kb

*N50 length, called phased blocks* \ \t \ \t\ \t \ \t `r digi(g2$n50_phase_block/1000)` kb

**LINKED-READ ALIGNMENT** 

*Long Ranger input reads* \ \t \ \t\ \t \ \t `r digi(g2$number_reads)`

*Mapped reads* \ \t \ \t\ \t \ \t `r digi(g2$mapped_reads)`

*Median insert size of aligned read pairs* \ \t \ \t\ \t \ \t `r digi(g2$median_insert_size)`

*Mean read depth* \ \t \ \t\ \t \ \t `r digi(g2$mean_depth)`

*Reads marked as PCR duplicates* \ \t \ \t\ \t \ \t `r digi(g2$pcr_duplication*100)` %  

*Non-N bases with zero coverage* \ \t \ \t\ \t \ \t `r digi(g2$zero_coverage*100) ` %   

*Aligned bases mapped to target regions* \ \t \ \t\ \t \ \t `r digi(g2$on_target_bases*100)` % 

BASE QUALITY OF READS
===================================== 

Column
-------------------------------------

### Read 1 Q20

```{r}
gauge(digi(g2$r1_q20_bases_fract*100), min = 0, max = 100, symbol = '%')
```

### Read 1 Q30

```{r}
gauge(digi(g2$r1_q30_bases_fract*100), min = 0, max = 100, symbol = '%')
```

### Read 2 Q20

```{r}
gauge(digi(g2$r2_q20_bases_fract*100), min = 0, max = 100, symbol = '%')
```

### Read 2 Q30

```{r}
gauge(digi(g2$r2_q30_bases_fract*100), min = 0, max = 100, symbol = '%')
```

Column
-------------------------------------

### Sample Index Q20

```{r}
gauge(digi(g2$si_q20_bases_fract*100), min = 0, max = 100, symbol = '%')
```

### Sample Index Q30

```{r}
gauge(digi(g2$si_q30_bases_fract*100), min = 0, max = 100, symbol = '%')
```

### Barcode Q20

```{r}
gauge(digi(g2$bc_q20_bases_fract*100), min = 0, max = 100, symbol = '%')
```

### Barcode Q30

```{r}
gauge(digi(g2$bc_q30_bases_fract*100), min = 0, max = 100, symbol = '%')
```

MOLECULE & BARCODE STATISTICS
===================================== 

Sidebar {.sidebar}
-------------------------------------
File: 

***

Chromium `r g2$instrument_ids`

***

Alignment Program Name


Row 
-------------------------------------

Calculations from SAM files; Compare with Long Ranger Estimates that are somewhat similiar

|Long_Ranger_Metric                      |Long_Ranger_Estimate |SAM_Metric                      |Calculated_from_SAM |
|:--------------------------------------|:--------------------|:-------------------------------|:-------------------|
|Mean length +/- s.d                    | `r digi(g2$molecule_length_mean/1000)` kbp +/- `r digi(g2$molecule_length_stddev/1000)` kbp             |Size of the molecules           |-                   |
|Mean DNA per GEM                       | `r digi(g2$mean_dna_per_gem)` read pairs`           |Number of reads per molecule    |-                   |
|NA                                     |-                    |Number of molecules per barcode |-                   |
|N50, read-pairs per input DNA molecule |   `r g2$n50_linked_reads_per_molecule`                 |Amount of DNA per barcode       |-                   |


<!--Third page introduced so that molecule and barcode statistics for SAM files
from alignment program other than Long Ranger can be reported-->


<!--TO DO 
Generate tsv from SAM file using Justin's script ?
Calculate metrics from tsv?
Publish to page 2 of the flexdashboard document above
Improve doc....
Proofing for technical accuracy
Map the metric terms used on page 1 to Long Ranger summary metrics-may be provide a link to https://support.10xgenomics.com/genome-exome/software/pipelines/latest/output/metrics for further explanation
or mouse over?? -->

